<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>源代码管理工具</title>
    <link href="/2021/05/scm-tools/"/>
    <url>/2021/05/scm-tools/</url>
    
    <content type="html"><![CDATA[<p><del>为啥需要源代码管理? 我自己写代码多爽，别人要，就用QQ传过去好了。</del></p><h2 id="0-为什么要对源代码进行管理"><a href="#0-为什么要对源代码进行管理" class="headerlink" title="0. 为什么要对源代码进行管理"></a>0. 为什么要对源代码进行管理</h2><blockquote><p> 源代码管理（SCM）用于跟踪对源代码存储库的修改。SCM跟踪代码库更改的运行历史，并帮助解决合并来自多个参与者的更新时的冲突。随着软件项目在代码行和贡献者人数方面的增长，通信开销和管理复杂性的成本也在增长。供应链管理是一个关键的工具，以减轻日益增长的开发成本带来的组织压力。</p><p> 无论您是自己编写简单的应用程序，还是与团队成员协作完成大型软件开发项目，源代码控制都是开发过程中的重要组成部分。借助源代码管理系统，您可以跟踪代码更改、查看代码的修订历史记录，并在需要时恢复到项目的之前版本。使用源代码管理系统，您可以与团队一起协作编写代码，在准备就绪之前隔离您的工作，并通过识别谁做出了更改以及做出了哪些更改来快速解决问题。源代码管理系统可帮助简化开发流程，并为所有代码提供集中式源代码。</p></blockquote><p>软件工程的质量要靠软件工具和软件流程来保证， 大家看过正在建设中的高楼， 半完工的楼顶上矗立着巨大的塔吊。这个<strong>塔吊不是用户需求的一部分</strong> ，但是，这是建筑工程上不可缺少的环节，那么怎么把塔吊顺利地安装上，随着楼房的增高而增高，让塔吊高质量地工作，怎么做安全检查，防止它倒下来？ 这就是工程的要求。</p><p>软件工程中，也有类似脚手架，塔吊这样的工程系统，工具和流程。 软件的源代码管理工具，加上构建系统, 能保证一个复杂软件能在多个角色，多个团队的合作下，按时以合适的质量发布。 如果你写一个Hello World 程序， 当然不需要这些工具， 就像你用儿童积木搭房子过家家，你自己高兴，但这不是建筑工程。</p><h2 id="1-常用的源代码管理工具"><a href="#1-常用的源代码管理工具" class="headerlink" title="1. 常用的源代码管理工具"></a>1. 常用的源代码管理工具</h2><h3 id="1-1-SVN"><a href="#1-1-SVN" class="headerlink" title="1.1 SVN"></a>1.1 SVN</h3><p><img src="/2021/05/scm-tools/svn.png" alt="SVN"></p><blockquote><p>SVN是subversion的缩写，是一个开放源代码的版本控制系统，通过采用分支管理系统的高效管理，简而言之就是用于多个人共同开发同一个项目，实现共享资源，实现最终集中式的管理。</p></blockquote><p><strong>SVN 的一些概念</strong></p><ul><li><strong>repository（源代码库）:</strong> 源代码统一存放的地方</li><li><strong>Checkout（提取）:</strong> 当你手上没有源代码的时候，你需要从repository checkout一份</li><li><strong>Commit（提交）:</strong> 当你已经修改了代码，你就需要Commit到repository</li><li><strong>Update (更新):</strong> 当你已经Checkout了一份源代码， Update一下你就可以和Repository上的源代码同步，你手上的代码就会有最新的变更</li></ul><h3 id="1-2-Git"><a href="#1-2-Git" class="headerlink" title="1.2 Git"></a>1.2 Git</h3><p><img src="/2021/05/scm-tools/git.png" alt="Git"></p><p>Git 是用于 Linux内核工具。与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持，使源代码的发布和交流极其方便。 Git 的速度很快，这对于诸如 Linux kernel 这样的大项目来说自然很重要。 Git 最为出色的是它的合并跟踪（merge tracing）能力。</p><p>Git 常用的是以下 6 个命令：<strong>git clone</strong>、<strong>git push</strong>、<strong>git add</strong> 、<strong>git commit</strong>、<strong>git checkout</strong>、<strong>git pull</strong></p><p><img src="https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg" alt="Git Workflow"></p><ul><li>workspace：工作区</li><li>staging area：暂存区/缓存区</li><li>local repository：版本库或本地仓库</li><li>remote repository：远程仓库</li></ul><h3 id="1-3-选择Git还是SVN"><a href="#1-3-选择Git还是SVN" class="headerlink" title="1.3 选择Git还是SVN"></a>1.3 选择Git还是SVN</h3><table><thead><tr><th>平台特点</th><th>SVN（集中式）</th><th>Git（分布式）</th></tr></thead><tbody><tr><td>是否有中央服务器</td><td>有。开发人员需要从中央服务器获得最新版本的项目然后在本地开发，开发完推送给中央服务器。因此脱离服务器开发者是几乎无法工作的</td><td>没有中央服务器，开发人员本地都有 Local Repository</td></tr><tr><td>网络依赖</td><td>必须要联网才能工作，而且对网络的依赖性较强，如果推送的文件比较大而且网络状况欠佳，则提交文件的速度会受到很大的限制。</td><td>分布式在没有网络的情况下也可以执行commit、查看版本提交记录、以及分支操作，在有网络的情况下执行 push 到 Remote Repository。</td></tr><tr><td>文件存储格式</td><td>按照原始文件存储，体积较大</td><td>按照元数据方式存储，体积很小</td></tr><tr><td>是否有版本号</td><td>有</td><td>没有</td></tr><tr><td>分支操作的影响</td><td>创建新的分支则所有的人都会拥有和你一样的分支</td><td>分支操作不会影响其他开发人员</td></tr><tr><td>提交</td><td>提交的文件会直接记录到中央版本库</td><td>提交是本地操作，需要执行push操作才会到主要版本库</td></tr></tbody></table><p>当研发成本比较低，协作开发人数不多，开发人员对于版本管理的水平参差不齐的时候，或者对于代码的安全性要求更高一点的时候，适合用svn。</p><p>而对于很多人参与开发，代码量比较大，或者高频次协作，跨公司，跨地域合作的情况下，更适合用git。</p><h2 id="2-常用的源代码管理平台"><a href="#2-常用的源代码管理平台" class="headerlink" title="2. 常用的源代码管理平台"></a>2. 常用的源代码管理平台</h2><p>除了源代码管理工具，我们还需要使用源代码管理平台。这样才能让不同的团队成员在不同的地方能够访问到源代码仓库，也能够对源代码进行统一的管理。</p><p>这个源代码管理平台，也就是上一部分中提到的<strong>remote repository</strong></p><p><img src="/2021/05/scm-tools/icon-group.png"></p><ul><li><a href="https://github.com/">GitHub</a></li></ul><p>GitHub是git存储库和协作项目开发的首选网站。该系统旨在允许用户轻松创建基于Git的特殊版本控制系统。为什么这么受欢迎?Git通过非线性开发历史的可视化工具和导航工具的帮助，支持流畅的版本合并和分割。现在，GitHub拥有5000多万个开源项目。</p><p>GitHub本身属于Microsoft产品</p><p>GitHub的服务不是完全免费的，如果想要享受GitHub提供的所有功能，需要付费。</p><p>大小限制：文件大小不能超过100Mb，存储库可以托管信息1Gb。</p><ul><li><a href="https://about.gitlab.com/">GitLab</a></li></ul><p>免费，这意味着用户可以拥有无限数量的私有存储库。当然为了满足客户要求，GitLab也有企业版，在其基本功能之上增加了一些额外的功能，从而改善了与在线工具，工作流和服务器管理等的交互。</p><p>GitLab在开源许可证下运行。</p><p>可以自行在内网搭建GitLab服务器</p><ul><li><a href="https://bitbucket.org/">Bitbucket</a></li></ul><p>BitBucket服务也非常类似于GitHub，但是它的大部分功能也略有不同。BitBucket最适合小型开发团队，随着团队的成长，BitBucket提供了与GitHub和GitLab相比更温和的定价条件。BitBucket还为团队提供了灵活的部署模式</p><p>不开源</p><p>Bitbucket是Atlassian产品，如果使用Atlassian的其他产品，可以和Bitbucket关联</p><ul><li><a href="https://gitee.com/">Gitee</a></li></ul><p>Gitee 是开源中国推出的基于 Git的代码托管服务。目前已经有注册开发者 600 万，托管超过 1500 万代码仓库。</p><p>中国大陆地区的Git平台，可以在普通的互联网环境下快速使用</p><p>也可以使用Gitee从不同的Git平台（例如GitHub）建立Git repository镜像</p><h2 id="3-项目小组示例"><a href="#3-项目小组示例" class="headerlink" title="3. 项目小组示例"></a>3. 项目小组示例</h2><h3 id="3-1-确定成员权限"><a href="#3-1-确定成员权限" class="headerlink" title="3.1 确定成员权限"></a>3.1 确定成员权限</h3><p><img src="/2021/05/scm-tools/access.png" alt="Manage access"></p><p>在你的项目设置中，可以设置access，在这里你可以通过邮件和ID邀请你的团队成员加入本项目，这样他们就有对应的权限来对repository进行控制。也可以为不同的项目成员分配不同的权限来完成不同的工作。</p><p>例如develop和code review。</p><p>需要提醒的一点是，有时候即使成员拥有push的权限，也不要直接在项目的主repository中进行push，最好的方式是让成员fork出自己的repository，在此进行feature的开发或debug。再提出一个pull request，由项目中进行code review的成员进行审核，在进行单元测试后符合预期再merge进项目repository中。</p><h3 id="3-2-确定分支模式"><a href="#3-2-确定分支模式" class="headerlink" title="3.2 确定分支模式"></a>3.2 确定分支模式</h3><p><img src="/2021/05/scm-tools/branch.png" alt="git branch"></p><p>最常见的模式是master-dev分支模式，项目stable的代码放在master分支中，由不同的项目组成员维护自己负责的部分的branch和fork。</p><p>在项目的git repository中，master分支用来管理已经被验证为stable的代码，正在开发的代码可以被储存到dev分支中。dev分支可以用多个，分别用来管理不同模块的开发代码。</p><p><em>不同的颜色表示由不同的开发者提交的代码，每个/每组开发者负责维护一个branch</em></p><h3 id="3-3-开发流程"><a href="#3-3-开发流程" class="headerlink" title="3.3 开发流程"></a>3.3 开发流程</h3><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015080501.png" alt="workflow"></p><p>一般工作流程如下：</p><ul><li>克隆 Git 资源作为工作目录。</li><li>在克隆的资源上添加或修改文件。 </li><li>如果其他人修改了，你可以更新资源。</li><li>在提交前查看修改。</li><li>提交修改。</li><li>在修改完成后，如果发现错误，可以撤回提交并再次修改并提交。</li></ul><p>现在就可以把你的项目成员加入到你的Git repository中开始你们的项目开发了。</p><h3 id="3-4-关于issue"><a href="#3-4-关于issue" class="headerlink" title="3.4 关于issue"></a>3.4 关于issue</h3><p>在软件开发过程中，开发者们为了跟踪BUG及进行软件相关讨论，进而方便管理，创建了Issue。管理Issue的系统称为BTS（Bug Tracking System，Bug跟踪系统）。当今具有代表性的BTS有<a href="https://link.jianshu.com/?t=http://www.redmine.org/">Redmine</a>、<a href="https://link.jianshu.com/?t=http://trac.edgewall.org/">Trac</a>、<a href="https://link.jianshu.com/?t=https://www.bugzilla.org/">BugZilla</a>等。</p><p>GitHub自身也加入了BTS的功能。在GitHub上，可以将它作为软件开发者之间的交流工具，多多加以利用。遇到下面几种情况时，各位就可以使用这个功能。</p><ul><li>发现软件的BUG并报告</li><li>有事想向作者询问、探讨</li><li>事先列出今后准备实施的任务</li></ul><p><img src="/2021/05/scm-tools/issue.png" alt="issue页面"></p><p>现在，很多大公司的软件研发团队协作，都是通过 JIRA 来实现的。</p><p>目前也流行很多非代码的团队协作，比如 teambition、Worktile、trello 等。</p><p>其实，GitHub 的 issue ，就是一个轻量级<strong>协作系统</strong>。它的 comment 支持 GitHub Flavored Markdown，可以进行内容丰富的交流。Git 本身就是分布式的代码版本控制软件，是为了程序员的协作而设计的。而 issue 的 Assignee 功能，就是这个在线协作系统的核心，足以让一群线上的开发者，一起完成一个软件项目。</p><h2 id="4-写在最后"><a href="#4-写在最后" class="headerlink" title="4. 写在最后"></a>4. 写在最后</h2><h3 id="灵活的版本管理"><a href="#灵活的版本管理" class="headerlink" title="灵活的版本管理"></a>灵活的版本管理</h3><p>代码这种东西太需要做版本管理了，尤其在一些大型项目需要多人合作的时候，如果要保证团队多个成员一起协作开发，这是必不可少的功能。另外，随着软件开发越来越成熟规范，测试和发布也更加讲究，这些都需要依赖版本管理功能。</p><p>目前，软件开发模式已经从瀑布式开发变为了敏捷开发，迭代速度越来越快，保证其快而不乱的恰恰是版本管理。</p><h3 id="由Git衍生出的Devops"><a href="#由Git衍生出的Devops" class="headerlink" title="由Git衍生出的Devops"></a>由Git衍生出的Devops</h3><p>基于Git的分布式存储以及版本管理，才有了今天Devops的蓬勃发展，不论是Jenkins，Kubernetes，还是各种云平台都提供了从Git加载工程构建部署到云的功能，Git可以说就是完整开发流程不能绕过的一个工具。</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p><a href="https://git-scm.com/doc">Git - Documentation</a></p><p><a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html">Git 使用规范流程</a></p><p><a href="https://zh.wikipedia.org/zh-hans/Git">git - 维基百科，自由的百科全书</a></p><ul><li>我自己的git</li></ul><p><a href="https://github.com/vlist">GitHub</a>链接</p><p><a href="https://gitee.com/vlist/">Gitee</a>链接</p><p>本博客的git repository <a href="https://gitee.com/vlist/vlist">Gitee</a> | <a href="https://github.com/vlist/vlist.github.io">GitHub</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发与创新</category>
      
    </categories>
    
    
    <tags>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件原型设计工具</title>
    <link href="/2021/05/prototype-tools/"/>
    <url>/2021/05/prototype-tools/</url>
    
    <content type="html"><![CDATA[<h2 id="0-开始之前"><a href="#0-开始之前" class="headerlink" title="0. 开始之前"></a>0. 开始之前</h2><p>在软件原型开始设计之前，我们需要整理好软件设计的思维。当我们完成原型的初步设计之后，就可以开始设计和验证想法。在软件原型开始设计之前，我们需要明确几个想法。</p><ol><li>这个软件最终会运行在什么样子的终端设备上</li><li>需要多久的时间来完成初步的设计</li><li>需要什么样的保真度</li></ol><h2 id="1-常见的软件原型设计工具"><a href="#1-常见的软件原型设计工具" class="headerlink" title="1. 常见的软件原型设计工具"></a>1. 常见的软件原型设计工具</h2><h3 id="1-1-Axure-RP"><a href="#1-1-Axure-RP" class="headerlink" title="1.1 Axure RP"></a>1.1 Axure RP</h3><blockquote><p>Axure RP是美国Axure Software Solution公司旗舰产品，是一个专业的快速原型设计工具，让负责定义需求和规格、设计功能和界面的专家能够快速创建应用软件或Web网站的线框图、流程图、原型和规格说明文档。作为专业的原型设计工具，它能快速、高效的创建原型，同时支持多人协作设计和版本控制管理</p></blockquote><p><img src="/2021/05/prototype-tools/axure_rp.png" alt="Axure RP"></p><p><strong>功能特色：</strong></p><ul><li>支持交互设计</li><li>生成规格说明文档</li><li>输出HTML原型</li><li>版本控制管理</li><li>支持多人协作设计</li><li>母版功能</li><li>支持动态面板和复用模板</li></ul><p><strong>收费模式</strong>：30天免费试用</p><p><strong>适用情景：</strong>视觉稿/高保真原型，大型复杂项目，Web线框图，网页原型</p><h3 id="1-2-墨刀"><a href="#1-2-墨刀" class="headerlink" title="1.2 墨刀"></a>1.2 墨刀</h3><p><img src="/2021/05/prototype-tools/modao.png" alt="墨刀"></p><p>使用墨刀可以快速设计软件原型</p><p><strong>特色功能：</strong></p><ul><li><p>简单的拖拽，即可快速完成产品设计，将更多的时间留给思考</p></li><li><p>尺寸灵活，创作不受限，适配各类移动产品、网页设计、后台管理、小程序、活动原型….</p></li><li><p>支持制作高、低保真原型，不论是工作交流，还是客户展示，都能完美满足团队需求</p></li><li><p>便捷的操作体验快速完成设计想象，功能相当强大，让你轻松应对需求</p></li><li><p>全中文支持，还能与其他工具无缝对接，串联起工作的每个场景</p></li><li><p>贴心的标注信息，便捷的切图下载，产品开发直接快人一步</p></li></ul><p>墨刀主要是面向中国地区的使用者，能够通过简单快速的网页端工具完成原型的设计。</p><p>但由于是网页端程序，在工作时必须使用互联网连接。</p><h3 id="1-3-除此之外"><a href="#1-3-除此之外" class="headerlink" title="1.3 除此之外"></a>1.3 除此之外</h3><p>在选择不同的原型工具开始工作之前，先问问自己：</p><ol><li>我需要什么样的工具来完成什么样的工作</li><li>我擅长使用什么样的技术</li><li>我是否应该花时间去学习一个新的工具</li></ol><p>除了上述提到的Axure RP和中国地区常用的墨刀，还有许多alternatives</p><ul><li>Principle</li><li>Adobe After Effects</li><li>Raw HTML/CSS/JS</li><li>Flinto</li><li>Origami</li><li>Phonegap</li><li>Xcode</li><li>Framer</li></ul><p>例如，如果我已经是一个会写前端代码的前端设计师了，我为什么不用我更擅长的HTML/CSS/JavaScript呢？</p><p>我已经是一个iOS软件开发者了，我为什么不使用Xcode Storyboard呢？</p><p>如果我已经是一个视频剪辑师了，我为什么不用Adobe After Effects呢？</p><p>如果我已经是一个平面设计师了，我为什么不用Adobe Photoshop/Illustrator呢？</p><p><del>如果我什么都不会，我为什么不拿一张纸和一支笔呢？</del></p><h3 id="1-4-谁比较好呢"><a href="#1-4-谁比较好呢" class="headerlink" title="1.4 谁比较好呢"></a>1.4 谁比较好呢</h3><p>Axure是是历史悠久的产品经理必备工具，功能齐全，交互方式多样，模板资源最丰富，基本上你想要的效果都可以实现，适合在制作PC端软件，尤其是一些针对偏B端的产品，有着明显的优势。</p><p>而且相比较墨刀，可以离线工作。缺点吗？当然也有，就是前期稍微学习成本相对于来说上手难一点，不过也比较简单。只要用心也很快可以学会。</p><h2 id="2-做一个Demo"><a href="#2-做一个Demo" class="headerlink" title="2. 做一个Demo"></a>2. 做一个Demo</h2><p>这是使用墨刀新建一个项目的首页布局，左侧是页面的树状结构，右侧是控件仓库和控件设置。</p><p>中间的工作区可以根据需要进行缩放和移动</p><p>左下角“元素”是类似Photoshop的图层功能，能够看到当前页面中的控件和对应的上下层关系</p><ul><li>主页面</li></ul><p><img src="/2021/05/prototype-tools/modao_1.png" alt="墨刀工作区"></p><ul><li>登录页面</li></ul><p><img src="/2021/05/prototype-tools/modao_2.png" alt="登录页面"></p><p>由于只是Demo，只是简单的做了两个页面。但可以发现，墨刀有着很鲜明的特点。</p><p>首先是基于网页的设计，让墨刀能够在浏览器中工作，使用者只需要在浏览器中登录账号就可以像在本地一样使用墨刀，墨刀也提供了许多模板给用户快速搭建针对特定场景的应用原型，让用户可以关注在自己的业务逻辑上。</p><p>但在我简短的使用中，有一个非常明显的缺点暴露出来。正是由于墨刀基于网页的设计，它的高级控件编辑功能是缺失的。</p><p>例如Demo中的背景图，我是在图片网站<a href="https://unsplash.com/">Unsplash</a>下载的图片</p><p><a href="https://unsplash.com/photos/71u2fOofI-U">three person holding mug and glass with beverage inside photo – Free Coffee Image on Unsplash</a></p><p>但将图片上传后，墨刀并不能让我很方便的对其进行编辑，只能进行基本的裁剪。如果我想将其进行高斯模糊等处理，墨刀就无能为力了。</p><p>在本Demo中的图片我使用了Photoshop进行高斯模糊处理，导出后再上传至墨刀。</p><h2 id="3-结语"><a href="#3-结语" class="headerlink" title="3. 结语"></a>3. 结语</h2><p>市面上有这么多原型设计工具，关键是，你应该专注于你的设计而不是工具。</p><p>你需要沟通什么、展示什么、测试什么？你需要建立怎样的模块？需要什么程度的保真？</p><p>当你专注于原型所需要的目标时，你就知道你要采用何种工具了。最后，每个人都应该有广泛的原型工具使用经验。当你需要它时，你马上就可以上手。</p>]]></content>
    
    
    <categories>
      
      <category>软件开发与创新</category>
      
    </categories>
    
    
    <tags>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pair Programing 结对编程初体验</title>
    <link href="/2021/04/Pair-Programing/"/>
    <url>/2021/04/Pair-Programing/</url>
    
    <content type="html"><![CDATA[<blockquote><p>这是一次关于结对编程的体验</p></blockquote><h2 id="0-写在前边"><a href="#0-写在前边" class="headerlink" title="0.写在前边"></a>0.写在前边</h2><blockquote><p><strong>结对编程</strong>（英语：Pair programming）是一种<a href="https://baike.baidu.com/item/%E6%95%8F%E6%8D%B7%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91">敏捷软件开发</a>的方法，两个<a href="https://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F%E5%91%98">程序员</a>在一个计算机上共同工作。一个人输入<a href="https://baike.baidu.com/item/%E4%BB%A3%E7%A0%81">代码</a>，而另一个人<a href="https://baike.baidu.com/item/%E5%AE%A1%E6%9F%A5">审查</a>他输入的每一行代码。输入代码的人称作<strong>驾驶员</strong>，审查代码的人称作<strong>观察员</strong>（或<strong>导航员</strong>）。两个程序员经常互换角色。</p><p>在结对编程中，观察员同时考虑工作的战略性方向，提出改进的意见，或将来可能出现的问题以便处理。这样使得驾驶者可以集中全部注意力在完成当前任务的“战术”方面。观察员当作安全网和指南。结对编程对开发程序有很多好处。比如增加纪律性，写出更好的代码等。</p><p>结对编程是<a href="https://baike.baidu.com/item/%E6%9E%81%E7%AB%AF%E7%BC%96%E7%A8%8B">极端编程</a>的组成部分。</p></blockquote><p>其实结对编程做起来很简单也很有趣，找个水平差的不太远的程序员和自己配成一对。只用一台计算机，大家选一个人坐在键盘前面负责输入，另一个人坐在后面口述。两个人要不断的交流，频率不应低于一分钟一次。整个的设计思想由后面只动口不动手的人主导，而由操键盘的人做实现。由于人的思维速度是快于输入代码的速度的。那么观看的人可以有空闲的时间做额外的思考，观察代码写的有没有问题，结构有没有问题。</p><h2 id="1-项目要求"><a href="#1-项目要求" class="headerlink" title="1. 项目要求"></a>1. 项目要求</h2><ul><li>小学老师要每周给同学出300道四则运算练习题。</li></ul><p>分析问题需求：</p><ol><li>需要使用程序生成300道数学题<ul><li>需要答案在0～100之间</li><li>需要中间的过程运算数均在0～100之间</li><li>需要考虑到运算优先级</li><li>限制在四则运算</li></ul></li><li>需要给出答案的正确与否</li><li>能够选择答案是否显示</li><li>能够给出正确率</li></ol><ul><li><p>这个程序有很多种实现方式:</p><ul><li><p>C/C++</p></li><li><p>C#/VB.net/Java</p></li><li><p>Excel</p></li><li><p>Unix Shell</p></li><li><p>Emacs/Powershell/Vbscript</p></li><li><p>Perl</p></li><li><p>Python</p></li></ul></li></ul><p>由于我们两人组都对C++相对更加熟悉，所以我们选择使用C++来实现这个项目</p><h2 id="2-开发环境"><a href="#2-开发环境" class="headerlink" title="2. 开发环境"></a>2. 开发环境</h2><p>机器A：Visual Studio Code + mingw64</p><p>机器B：Xcode + clang</p><p>首先使用机器A编写了最初的程序原型，经过基本的测试和编译后，将代码发送到机器B中，使用</p><p><img src="/2021/04/Pair-Programing/VSC.png" alt="VSC"></p><p><img src="/2021/04/Pair-Programing/Xcode.png" alt="Xcode"></p><h2 id="3-实验内容和步骤"><a href="#3-实验内容和步骤" class="headerlink" title="3. 实验内容和步骤"></a>3. 实验内容和步骤</h2><p>所谓结对编程，核心就是<strong>一个人输入代码，而另一个人审查他输入的每一行代码。</strong></p><p>所以由我在一旁看另一位同学编码，我一边给出意见和建议，一边理解对方的代码。</p><h3 id="第一版原型"><a href="#第一版原型" class="headerlink" title="第一版原型"></a>第一版原型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> N = <span class="hljs-number">300</span>;<br><span class="hljs-keyword">bool</span> flag;<br><span class="hljs-keyword">char</span> op[] = &#123;<span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>&#125;;<br><span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">char</span>, <span class="hljs-keyword">int</span>&gt; f;<br><span class="hljs-keyword">int</span> a[N + <span class="hljs-number">5</span>], b[N + <span class="hljs-number">5</span>], c[N + <span class="hljs-number">5</span>], ans[N + <span class="hljs-number">5</span>];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">f2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">char</span> op, <span class="hljs-keyword">int</span> b)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> ((a &lt; <span class="hljs-number">0</span>) || (b &lt; <span class="hljs-number">0</span>)) <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span> ((a &gt; <span class="hljs-number">100</span>) || (b &gt; <span class="hljs-number">100</span>)) <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;+&#x27;</span>) <span class="hljs-keyword">return</span>(a + b);<br><span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;-&#x27;</span>) <span class="hljs-keyword">return</span>(a - b);<br><span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;*&#x27;</span>) <span class="hljs-keyword">return</span>(a * b);<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;/&#x27;</span>) &#123;<br><span class="hljs-keyword">if</span> (!b) <span class="hljs-keyword">return</span>(<span class="hljs-number">-1</span>); <br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a % b) <span class="hljs-keyword">return</span>(<span class="hljs-number">-1</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span>(a / b);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    f[<span class="hljs-string">&#x27;+&#x27;</span>] = f[<span class="hljs-string">&#x27;-&#x27;</span>] = <span class="hljs-number">0</span>;<br>    f[<span class="hljs-string">&#x27;*&#x27;</span>] = f[<span class="hljs-string">&#x27;/&#x27;</span>] = <span class="hljs-number">1</span>;<br>    srand(time(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= N; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">char</span> ch1, ch2;<br>        <span class="hljs-keyword">while</span> (!flag) &#123;<br>            a[i] = rand() % <span class="hljs-number">100</span>; b[i] = rand() % <span class="hljs-number">100</span>; c[i] = rand() % <span class="hljs-number">100</span>;<br>            ch1 = op[rand() % <span class="hljs-number">4</span>];<br>            ch2 = op[rand() % <span class="hljs-number">4</span>];<br>            <span class="hljs-keyword">if</span> (f[ch1] &lt; f[ch2]) &#123;<br>                ans[i] = f2(b[i], ch2, c[i]);<br>                ans[i] = f2(a[i], ch1, ans[i]);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                ans[i] = f2(a[i], ch1, b[i]);<br>                ans[i] = f2(ans[i], ch2, c[i]);<br>            &#125;<br>            <span class="hljs-keyword">if</span> ((ans[i] &lt; <span class="hljs-number">0</span>) || (ans[i] &gt; <span class="hljs-number">100</span>)) flag = <span class="hljs-literal">false</span>; <span class="hljs-keyword">else</span> flag = <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&#x27;(&#x27;</span> &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot;) &quot;</span> &lt;&lt; a[i] &lt;&lt; ch1 &lt;&lt; b[i] &lt;&lt; ch2 &lt;&lt; c[i] &lt;&lt; <span class="hljs-string">&quot;=&quot;</span> &lt;&lt; ans[i];<br>        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">3</span>) <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&#x27;\t&#x27;</span>; <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/04/Pair-Programing/stage1.png" alt="Stage1"></p><p>在第一版原型中，我们简单的实现了按照项目要求中的算式需求，生成300道数学题的功能</p><p>。我们主要通过 <code>rand()</code> 函数取模运算来限制随机生成的数字。同样，使用 <code>rand()</code> 随机生成不同的运算符号。对于每一个生成的算式，我们对其进行运算，并得到对应的运算结果。</p><p>我们再检查运算结果是否在0～100中，如果不在，就再生成一个算式。</p><p>这样，我们就很快的实现了最初的原型设计</p><h3 id="第二版原型"><a href="#第二版原型" class="headerlink" title="第二版原型"></a>第二版原型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-keyword">int</span> N;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> M = <span class="hljs-number">510</span>;<br><span class="hljs-keyword">bool</span> flag;<br><span class="hljs-keyword">char</span> op[] = &#123;<span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-string">&#x27;-&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>&#125;;<br><span class="hljs-built_in">map</span>&lt;<span class="hljs-keyword">char</span>, <span class="hljs-keyword">int</span>&gt; f;<br><span class="hljs-keyword">int</span> a[M], b[M], c[M], ans[M], check[M], w[M];<br><span class="hljs-keyword">char</span> ch1[M], ch2[M];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">f2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">char</span> op, <span class="hljs-keyword">int</span> b)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> ((a &lt; <span class="hljs-number">0</span>) || (b &lt; <span class="hljs-number">0</span>)) <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span> ((a &gt; <span class="hljs-number">100</span>) || (b &gt; <span class="hljs-number">100</span>)) <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;+&#x27;</span>) <span class="hljs-keyword">return</span>(a + b);<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;-&#x27;</span>) <span class="hljs-keyword">return</span>(a - b);<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;*&#x27;</span>) <span class="hljs-keyword">return</span>(a * b);<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;/&#x27;</span>) &#123;<br>        <span class="hljs-keyword">if</span> (!b) <span class="hljs-keyword">return</span>(<span class="hljs-number">-1</span>);<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a % b) <span class="hljs-keyword">return</span>(<span class="hljs-number">-1</span>); <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span>(a / b);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">write</span><span class="hljs-params">(<span class="hljs-keyword">bool</span> flag)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= N; i++) &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&#x27;(&#x27;</span> &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot;) &quot;</span> &lt;&lt; a[i] &lt;&lt; ch1[i] &lt;&lt; b[i] &lt;&lt; ch2[i] &lt;&lt; c[i] &lt;&lt; <span class="hljs-string">&quot;=&quot;</span>;<br>        <span class="hljs-keyword">if</span> (flag) <span class="hljs-built_in">cout</span> &lt;&lt; ans[i];<br>        <span class="hljs-keyword">if</span> (i % <span class="hljs-number">3</span>) <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;\t&quot;</span>; <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span> </span>&#123;<br>    f[<span class="hljs-string">&#x27;+&#x27;</span>] = f[<span class="hljs-string">&#x27;-&#x27;</span>] = <span class="hljs-number">0</span>;<br>    f[<span class="hljs-string">&#x27;*&#x27;</span>] = f[<span class="hljs-string">&#x27;/&#x27;</span>] = <span class="hljs-number">1</span>;<br>    srand(time(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= N; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">while</span> (!flag) &#123;<br>            a[i] = rand() % <span class="hljs-number">100</span>; b[i] = rand() % <span class="hljs-number">100</span>; c[i] = rand() % <span class="hljs-number">100</span>;<br>            ch1[i] = op[rand() % <span class="hljs-number">4</span>];<br>            ch2[i] = op[rand() % <span class="hljs-number">4</span>];<br>            <span class="hljs-keyword">if</span> (f[ch1[i]] &lt; f[ch2[i]]) &#123;<br>                ans[i] = f2(b[i], ch2[i], c[i]);<br>                ans[i] = f2(a[i], ch1[i], ans[i]);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                ans[i] = f2(a[i], ch1[i], b[i]);<br>                ans[i] = f2(ans[i], ch2[i], c[i]);<br>            &#125;<br>            <span class="hljs-keyword">if</span> ((ans[i] &lt; <span class="hljs-number">0</span>) || (ans[i] &gt; <span class="hljs-number">100</span>)) flag = <span class="hljs-literal">false</span>; <span class="hljs-keyword">else</span> flag = <span class="hljs-literal">true</span>;<br>            <br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;请输入需要生成的习题数量(0-500):&quot;</span>;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; N;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;正在自动生成习题&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    init();<br>    <span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">endl</span> &lt;&lt; <span class="hljs-string">&quot;请按照题号依次输入答案,按回车自动进入下一道题&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= N; i++) &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&#x27;(&#x27;</span> &lt;&lt; i &lt;&lt; <span class="hljs-string">&#x27;)&#x27;</span> &lt;&lt; a[i] &lt;&lt; ch1[i] &lt;&lt; b[i] &lt;&lt; ch2[i] &lt;&lt; c[i] &lt;&lt; <span class="hljs-string">&quot;=&quot;</span>;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; check[i];<br>        <span class="hljs-keyword">if</span> (check[i] != ans[i]) w[++num] = i;<br>    &#125;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;您共回答正确了&quot;</span> &lt;&lt; N - num &lt;&lt; <span class="hljs-string">&quot;道题目，答错&quot;</span> &lt;&lt; num &lt;&lt; <span class="hljs-string">&quot;道&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">if</span> (num) &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;您做错的题目分别为：&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= num; i++) &#123;<br>            <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;第&quot;</span> &lt;&lt; w[i] &lt;&lt; <span class="hljs-string">&quot;道,您输入的答案为&quot;</span> &lt;&lt; check[w[i]] &lt;&lt; <span class="hljs-string">&quot;正确答案为&quot;</span> &lt;&lt; ans[w[i]] &lt;&lt; <span class="hljs-built_in">endl</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;都答对了，你真棒！&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>在第二版中，我们在第一版的基础上添加了几个功能</p><ul><li>能够选择需要回答的问题数量</li><li>能够和用户交互，输入答案</li><li>验证用户输入的答案</li><li>统计正确数量，给出错误的题号和正确答案</li></ul><p><img src="/2021/04/Pair-Programing/stage2.png" alt="stage2"></p><h2 id="4-结果和分析"><a href="#4-结果和分析" class="headerlink" title="4. 结果和分析"></a>4. 结果和分析</h2><p>经过很短的时间我们的项目原型就已经完成了，回顾上方的需求分析，我们已经完成了所需的功能</p><ul><li><p><input checked disabled type="checkbox">  需要使用程序生成300道数学题</p><ul><li><p><input checked disabled type="checkbox">  需要答案在0～100之间</p></li><li><p><input checked disabled type="checkbox">  需要中间的过程运算数均在0～100之间</p></li><li><p><input checked disabled type="checkbox">  需要考虑到运算优先级</p></li><li><p><input checked disabled type="checkbox">  限制在四则运算</p></li></ul></li><li><p><input checked disabled type="checkbox">  需要给出答案的正确与否</p></li><li><p><input checked disabled type="checkbox">  能够选择答案是否显示</p></li><li><p><input disabled type="checkbox">  能够给出正确率</p></li></ul><p>虽然给出了答案的正确与否，但是遗漏了正确率的功能</p><p>除此之外，这个程序的交互见面还过于简陋。如果按照需求的分析，项目的涉众是小学老师和小学生，如果还留着简陋的交互界面对于使用者来说必然是不适的，所以我们还可以有更多值得改进的地方</p><ul><li>图形界面</li><li>友好的提示</li><li>更合理的交互流程</li></ul><h2 id="5-实验体会"><a href="#5-实验体会" class="headerlink" title="5. 实验体会"></a>5. 实验体会</h2><p>组员A：相比起原本自己敲代码的情况下，结对编程能够更高的提升效率，帮助我们在有限的时间内尽可能完成所需要做的工作。而且在有人查看的情况下，也更加容易在编码阶段就更容易发现代码中的错误，也能够关注到一开始没有注意到的问题。</p><p>组员B：在别人写代码的时候在一旁观看，能够学习到别人的编码风格和设计思维。每个人都会有自己的编程风格，所以不仅需要学会自己写代码，更重要的是学会看懂别人的代码。使用结对编程的方式迫使我们把注意力集中在工作中，而不容易被不相关的事情打断思路。</p><blockquote><p>一些研究发现程序员结对工作与单独工作相比，会写出更短的程序，更好的设计，以及更少的缺陷。研究发现缺陷率降低15%到50%，会由于程序员的经验以及任务的复杂度而不同。结对编程比单独编程相比，通常会考虑更多的设计选项，达成更简单，更易维护的设计；程序员们也会更早地捕捉到设计的缺陷。结对编程与一个程序员承担同一个任务相比工作会完成的更快。结对的程序员经常发现当他们一同工作时表面上“不可能”的问题变得容易，或更加快速，或至少有可能解决。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>软件开发与创新</category>
      
    </categories>
    
    
    <tags>
      
      <tag>作业</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为MMM-WeeklySchedule添加地点详情功能</title>
    <link href="/2021/03/MMM-weeklyschedule-add-feature/"/>
    <url>/2021/03/MMM-weeklyschedule-add-feature/</url>
    
    <content type="html"><![CDATA[<h2 id="0-背景"><a href="#0-背景" class="headerlink" title="0. 背景"></a>0. 背景</h2><h3 id="0-1-关于我的项目"><a href="#0-1-关于我的项目" class="headerlink" title="0.1 关于我的项目"></a>0.1 关于我的项目</h3><p>使用 <a herf="https://github.com/MichMich/MagicMirror">MagicMirror<sup>2</sup></a> 可以搭建一个基于NodeJS和JavaScript的展示屏幕。</p><p>在本校的计算机应用大赛中，本小组制作了基于树莓派的物联网智能仪容镜，能够在单向玻璃后使用一块常规的IPS屏幕来显示内容。</p><p>其中内容的展示我们选用了基于NodeJS和JavaScript的MagicMirror<sup>2</sup>来展示所需要显示的内容。</p><p>由于我们的项目针对学生的需求，希望能够加入展示课程表的功能，所以我们选用了MagicMirror<sup>2</sup>的插件 <strong>MMM-WeeklySchedule</strong> 来实现课程表功能，并对其增加显示上课地点的feature。</p><h3 id="0-2-关于MagicMirror-2"><a href="#0-2-关于MagicMirror-2" class="headerlink" title="0.2 关于MagicMirror 2"></a>0.2 关于MagicMirror <sup>2</sup></h3><p><img src="https://gitee.com/yqlai/MagicMirror/raw/master/.github/header.png" alt="MagicMirror²: The open source modular smart mirror platform. "></p><blockquote><p><strong>MagicMirror²</strong> is an open source modular smart mirror platform. With a growing list of installable modules, the <strong>MagicMirror²</strong> allows you to convert your hallway or bathroom mirror into your personal assistant. <strong>MagicMirror²</strong> is built by the creator of <a href="https://michaelteeuw.nl/tagged/magicmirror">the original MagicMirror</a> with the incredible help of a <a href="https://github.com/MichMich/MagicMirror/graphs/contributors">growing community of contributors</a>.</p></blockquote><h3 id="0-3-关于MMM-WeeklySchedule"><a href="#0-3-关于MMM-WeeklySchedule" class="headerlink" title="0.3 关于MMM-WeeklySchedule"></a>0.3 关于MMM-WeeklySchedule</h3><p>以下是关于本项目的介绍，本项目是一个MagicMirror的插件，能够在MagicMirror页面上根据配置文件按星期显示课程表，课程表包含了上课时间和课程名称。</p><p><a href="https://github.com/pinsdorf/MMM-WeeklySchedule">项目地址</a></p><h4 id="MMM-WeeklySchedule"><a href="#MMM-WeeklySchedule" class="headerlink" title="MMM-WeeklySchedule"></a>MMM-WeeklySchedule</h4><p>This a module for the <a href="https://github.com/MichMich/MagicMirror">MagicMirror</a>. It displays today’s timetable from a weekly recurring schedule. It is intended for regular weekly schedules, which have a low update frequency and thus can be maintained manually. Examples are:</p><ul><li>kid’s school classes</li><li>student lectures</li><li>teacher’s teaching schedule</li><li>gym training classes</li><li>household chores</li><li>opening hours of bakery, post office, supermarket</li></ul><img src="/2021/03/MMM-weeklyschedule-add-feature/screenshot2.png" alt="preview" style="zoom: 50%;"><h4 id="Config"><a href="#Config" class="headerlink" title="Config"></a>Config</h4><p>The entry in <code>config.js</code> can include the following options:</p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>schedule</code></td><td>Defines the data the module shows. It consists of a definition for <code>timeslots</code> and <code>lessons</code>. See below.</td></tr><tr><td><code>updateInterval</code></td><td>How often the content is updated. <strong>Default value:</strong> <code>1 • 60 • 60 • 1000</code> // every 1 hour</td></tr><tr><td><code>showWeekdayinHeader</code></td><td>Appends the module <code>header</code>text with weekday name, e.g., <em>on Monday</em> <strong>Default value:</strong> <code>true</code></td></tr><tr><td><code>showNextDayAfter</code></td><td>From this time of the day on the module shows the schedule of the <em>next</em> day. This is helpful when, e.g., a school day is over and you want to show what is up tomorrow. If you don’t like this set the value to <code>23:59</code> or <code>undefined</code>. <strong>Default value:</strong> <code>16:00</code></td></tr><tr><td><code>allowHTML</code></td><td>Whether timeslot and lesson texts can contain HTML. Can for example be used to color certain lessons. <strong>Default value:</strong> <code>false</code></td></tr></tbody></table><h2 id="1-项目需求分析"><a href="#1-项目需求分析" class="headerlink" title="1. 项目需求分析"></a>1. 项目需求分析</h2><p>经过了简单的了解，MMM-WeeklySchedule只能够按照星期显示上课的时间的课程名称，不能够显示上课的地点。</p><p>然而我们所设计的项目中需要本模块能够显示上课地点，所以对MMM-WeeklySchedule进行更改，添加显示上课地点的feature</p><h2 id="2-代码修改"><a href="#2-代码修改" class="headerlink" title="2. 代码修改"></a>2. 代码修改</h2><h3 id="2-1-项目代码分析"><a href="#2-1-项目代码分析" class="headerlink" title="2.1 项目代码分析"></a>2.1 项目代码分析</h3><p>项目文件的树状结构</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css">├── <span class="hljs-selector-tag">MMM-WeeklySchedule</span><span class="hljs-selector-class">.css</span><br>├── <span class="hljs-selector-tag">MMM-WeeklySchedule</span><span class="hljs-selector-class">.js</span><br>├── <span class="hljs-selector-tag">package</span><span class="hljs-selector-class">.json</span><br>├── <span class="hljs-selector-tag">README</span><span class="hljs-selector-class">.md</span><br>└── <span class="hljs-selector-tag">translations</span><br>    ├── <span class="hljs-selector-tag">en</span><span class="hljs-selector-class">.json</span><br>    ├── ...<br>    └── <span class="hljs-selector-tag">zh-cn</span><span class="hljs-selector-class">.json</span><br></code></pre></td></tr></table></figure><p>简单分析可以知道，<code>MMM-WeeklySchedule.css</code> 和 <code>MMM-WeeklySchedule.js</code> 是本项目最核心的文件，涉及到课程表HTML表单的生成，</p><p><code>package.json</code> 是NodeJS的npm管理器相关的包管理文件，</p><p><code>README.md</code> 是本项目的说明文件，</p><p><code>translations/</code> 其中存放了本项目的i18n文件。</p><hr><p>分析 <code>MMM-WeeklySchedule.js</code> ，其中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-comment">//Other function ...</span><br>    <br>getDom: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br><span class="hljs-keyword">var</span> date = <span class="hljs-built_in">this</span>.getDisplayDate(); <br><br><span class="hljs-comment">// get day of week and access respective element in lessons array</span><br><span class="hljs-keyword">var</span> dow = date.locale(<span class="hljs-string">&#x27;en&#x27;</span>).format(<span class="hljs-string">&quot;ddd&quot;</span>).toLowerCase();<br><span class="hljs-keyword">var</span> lessons = <span class="hljs-built_in">this</span>.config.schedule.lessons[dow];<br><br><span class="hljs-comment">// no lessons today, we return default text</span><br><span class="hljs-keyword">if</span>(lessons == <span class="hljs-literal">undefined</span>)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.createTextOnlyDom(<br><span class="hljs-built_in">this</span>.translate(<span class="hljs-string">&quot;NO_LESSONS&quot;</span>)<br>);<br>&#125;<br><br><span class="hljs-comment">// get timeslots</span><br><span class="hljs-keyword">var</span> timeslots = <span class="hljs-built_in">this</span>.config.schedule.timeslots;<br><br><span class="hljs-comment">// build table with timeslot definitions and lessons</span><br>wrapper = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;table&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; lessons.length; index++) &#123;<br><span class="hljs-keyword">const</span> lesson = lessons[index];<br><span class="hljs-keyword">const</span> time = timeslots[index];<br><br><span class="hljs-comment">// only create a row if the timeslot&#x27;s lesson is defined and not an empty string</span><br><span class="hljs-keyword">if</span>(lesson)<br>&#123;<br><span class="hljs-keyword">var</span> row = <span class="hljs-built_in">this</span>.createTimetableRow(time, lesson); <br>wrapper.appendChild(row);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> wrapper;<br>        <span class="hljs-comment">//Other function ...</span><br>&#125;,<br></code></pre></td></tr></table></figure><p>可以知道，<code>getDom: function()</code> 是关系着DOM生成的函数，在此处生成了将要显示在 <code>MagicMirror</code> 展示屏幕上的内容 。</p><p>在 <code>getDom: function()</code> 中，可以知道涉及到生成基于表格的课程表的部分代码在此处：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// build table with timeslot definitions and lessons</span><br>wrapper = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;table&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; lessons.length; index++) &#123;<br><span class="hljs-keyword">const</span> lesson = lessons[index];<br><span class="hljs-keyword">const</span> time = timeslots[index];<br></code></pre></td></tr></table></figure><p>所以我们需要修改的部分主要在此处。</p><h3 id="2-2-代码修改"><a href="#2-2-代码修改" class="headerlink" title="2.2 代码修改"></a>2.2 代码修改</h3><h4 id="2-2-1-读取课程"><a href="#2-2-1-读取课程" class="headerlink" title="2.2.1 读取课程"></a>2.2.1 读取课程</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript">&#123;<br>    <span class="hljs-built_in">module</span>: <span class="hljs-string">&quot;MMM-WeeklySchedule&quot;</span>,<br>    position: <span class="hljs-string">&quot;top_left&quot;</span>,<br>    header: <span class="hljs-string">&quot;Household chores&quot;</span>,<br>    config: &#123;<br>            schedule: &#123;<br>                    timeslots: [ <span class="hljs-string">&quot;Feed the fish&quot;</span>, <span class="hljs-string">&quot;Set the table&quot;</span>, <span class="hljs-string">&quot;Take out the trash&quot;</span>, <span class="hljs-string">&quot;Hoover living room&quot;</span> ],<br>                    lessons: &#123;<br>                            mon: [ <span class="hljs-string">&quot;Bart&quot;</span>,  <span class="hljs-string">&quot;Marge&quot;</span>, <span class="hljs-string">&quot;Homer&quot;</span>, <span class="hljs-string">&quot;Lisa&quot;</span>  ],<br>                            tue: [ <span class="hljs-string">&quot;Lisa&quot;</span>,  <span class="hljs-string">&quot;Bart&quot;</span>,  <span class="hljs-string">&quot;Marge&quot;</span>, <span class="hljs-string">&quot;Homer&quot;</span> ],<br>                            wed: [ <span class="hljs-string">&quot;Homer&quot;</span>, <span class="hljs-string">&quot;Lisa&quot;</span>,  <span class="hljs-string">&quot;Bart&quot;</span>,  <span class="hljs-string">&quot;Marge&quot;</span> ],<br>                            thu: [ <span class="hljs-string">&quot;Marge&quot;</span>, <span class="hljs-string">&quot;Homer&quot;</span>, <span class="hljs-string">&quot;Lisa&quot;</span>,  <span class="hljs-string">&quot;Bart&quot;</span>  ],<br>                            fri: [ <span class="hljs-string">&quot;Bart&quot;</span>,  <span class="hljs-string">&quot;Marge&quot;</span>, <span class="hljs-string">&quot;Homer&quot;</span>, <span class="hljs-string">&quot;Lisa&quot;</span> ]<br>                    &#125;<br>            &#125;,<br>            updateInterval: <span class="hljs-number">1</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>, <span class="hljs-comment">// every hour</span><br>            showNextDayAfter: <span class="hljs-literal">undefined</span><br>    &#125;<br>&#125;,<br></code></pre></td></tr></table></figure><p>这是原模块设计的配置文件部分，其中 <code>schedule</code> 字段规定了模块所显示的课程表信息，我们的计划是在每个课程中添加字段，使用 <code>name</code> 字段来表示课程名称，使用 <code>room</code> 来表示上课地点。</p><p>根据MagicMirror的 <code>说明文档</code> <a href="https://docs.magicmirror.builders/">Introduction | MagicMirror² Documentation</a></p><p>使用 <code>this.config</code> 可以在模块的js文件中引用 <code>config.js</code> 文件中的本模块部分的配置。</p><p>在 <code>getDom: function()</code> 中，使用了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> lessons = <span class="hljs-built_in">this</span>.config.schedule.lessons[dow];<br></code></pre></td></tr></table></figure><p>来对配置文件进行读取，生成了lessons对象。</p><p>对其加以修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; lessons.length; index++) &#123;<br><span class="hljs-keyword">const</span> lesson = lessons[index][<span class="hljs-string">&quot;name&quot;</span>];<br><span class="hljs-keyword">const</span> room = lessons[index][<span class="hljs-string">&quot;room&quot;</span>];<br><span class="hljs-keyword">const</span> time = timeslots[index];<br><br><span class="hljs-keyword">var</span> row = <span class="hljs-built_in">this</span>.createTimetableRow(time, lesson, room);<br>wrapper.appendChild(row);<br>&#125;<br></code></pre></td></tr></table></figure><p>如上述修改即可对配置文件中的内容进行读取了。修改后的配置文件应以如下方法使用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript">lessons: &#123;<br>mon: [<br>&#123;<br>name: <span class="hljs-string">&quot;&quot;</span>,<br>room: <span class="hljs-string">&quot;&quot;</span>,<br>&#125;,<br>&#123;<br>name: <span class="hljs-string">&quot;软件工程导论&quot;</span>,<br>room: <span class="hljs-string">&quot;1107&quot;</span>,<br>&#125;,<br>&#123;<br>name: <span class="hljs-string">&quot;离散数学&quot;</span>,<br>room: <span class="hljs-string">&quot;3110&quot;</span>,<br>&#125;,<br>&#123;<br>name: <span class="hljs-string">&quot;大学生体育与健康&quot;</span>,<br>room: <span class="hljs-string">&quot;西看台202&quot;</span>,<br>&#125;,<br>&#123;<br>name: <span class="hljs-string">&quot;&quot;</span>,<br>room: <span class="hljs-string">&quot;&quot;</span>,<br>&#125;<br>],<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-2-2-设置样式"><a href="#2-2-2-设置样式" class="headerlink" title="2.2.2 设置样式"></a>2.2.2 设置样式</h4><p>完成了从配置文件读取内容的部分，还需要对读取的内容进行Html样式的设计。</p><p>分析原项目的 <code>MMM-WeeklySchedule.js</code> 可以发现和设置样式有关的函数</p><p><code>createTimetableRow: function (time, lesson)</code></p><p>与设置单元格样式有关的部分：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> tdlesson = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;td&quot;</span>);<br>tdlesson.className = <span class="hljs-string">&quot;xsmall bright lesson&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.config.allowHTML) &#123;<br>tdlesson.innerHTML = lesson;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>tdlesson.appendChild(<br><span class="hljs-built_in">document</span>.createTextNode(lesson)<br>);<br>&#125;<br>row.appendChild(tdlesson);<br></code></pre></td></tr></table></figure><p>依照原本的函数，可以添加对新增内容 <code>room</code> 的设置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> tdroom = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&quot;td&quot;</span>);<br>tdroom.className = <span class="hljs-string">&quot;xsmall bright lesson&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.config.allowHTML) &#123;<br>tdroom.innerHTML = room;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>tdroom.appendChild(<br><span class="hljs-built_in">document</span>.createTextNode(room)<br>);<br>&#125;<br>row.appendChild(tdroom);<br></code></pre></td></tr></table></figure><h3 id="2-3-CSS修改"><a href="#2-3-CSS修改" class="headerlink" title="2.3 CSS修改"></a>2.3 CSS修改</h3><p>由于原本的模块基于英文进行的开发，此处如果有需要可以在CSS文件中对中文样式进行调整</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;<br>.lessontime &#123;<br>    <span class="hljs-selector-tag">text-align</span>: <span class="hljs-selector-tag">right</span>;<br>    <span class="hljs-selector-tag">white-space</span>: <span class="hljs-selector-tag">nowrap</span>;<br>    <span class="hljs-selector-tag">padding-right</span>: 2<span class="hljs-selector-tag">em</span>;<br>    <span class="hljs-selector-tag">width</span>: 1<span class="hljs-selector-tag">ex</span>;<br>&#125;<br><br><span class="hljs-selector-class">.lesson</span>&#123;<br>    <span class="hljs-attribute">text-align</span>: left;<br>    <span class="hljs-attribute">padding-right</span>: <span class="hljs-number">1em</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3-成果展示"><a href="#3-成果展示" class="headerlink" title="3. 成果展示"></a>3. 成果展示</h2><p><img src="/2021/03/MMM-weeklyschedule-add-feature/Screenshot3.png" alt="preview"></p><h2 id="4-结语"><a href="#4-结语" class="headerlink" title="4. 结语"></a>4. 结语</h2><p>本项目是基于MagicMirror的一个插件，使用JavaScript来编写，也可以使用Html语法来进行修改。</p><p>原本是用于制作“魔镜”的插件，在针对本地化的过程中加入了针对中国大学生看课表时也需要注意上课时间的特点，增添了课程上课地点的展示。</p><p>总的来说效果令人满意。</p>]]></content>
    
    
    <categories>
      
      <category>软件开发与创新</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
      <tag>NodeJS</tag>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件开发与创新-博客测试</title>
    <link href="/2021/03/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%8E%E5%88%9B%E6%96%B0-%E5%8D%9A%E5%AE%A2%E6%B5%8B%E8%AF%95/"/>
    <url>/2021/03/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%8E%E5%88%9B%E6%96%B0-%E5%8D%9A%E5%AE%A2%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h2 id="软件开发与创新-博客测试-Title"><a href="#软件开发与创新-博客测试-Title" class="headerlink" title="软件开发与创新-博客测试 Title"></a>软件开发与创新-博客测试 Title</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp">#This is Code Part<br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Shanghai Ocean University - Software Engineering\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h3><p>正文</p><ol><li>项目1</li><li>项目2</li></ol><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>测试结果应该很OK</p><h3 id="友情连接"><a href="#友情连接" class="headerlink" title="友情连接"></a>友情连接</h3><p>同小组内组员的博客</p><p><a href="https://www.cnblogs.com/tangchengke">唐承柯</a></p><p><a href="https://www.cnblogs.com/pengpengpeng">蝎子莱莱。</a></p><p><a href="https://www.cnblogs.com/immature123">immature123</a></p><p><a href="https://www.cnblogs.com/zky-1959123">zky2021</a></p><p><a href="https://www.cnblogs.com/zxyayx1314">ayx</a></p>]]></content>
    
    
    <categories>
      
      <category>软件开发与创新</category>
      
    </categories>
    
    
    <tags>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>购买阿里云“云翼计划”学生ECS</title>
    <link href="/2020/09/Aliyun-ECS/"/>
    <url>/2020/09/Aliyun-ECS/</url>
    
    <content type="html"><![CDATA[<h2 id="1-购买阿里云学生ECS"><a href="#1-购买阿里云学生ECS" class="headerlink" title="1 购买阿里云学生ECS"></a>1 购买阿里云学生ECS</h2><p>阿里云提供了面向学生群体的优惠VPS，只要是实名认证的24岁以下用户都可以以十分优惠的价格使用阿里云ECS服务</p><p><a href="https://promotion.aliyun.com/ntms/act/campus2018.html?spm=a2c4g.11186623.2.10.501d4e6bd2r329">阿里云学生机</a></p><p><img src="/2020/09/Aliyun-ECS/image-20200926225140610.png" alt="image-20200926225307141"></p><p>只需要9.5元/月就可以使用一个ECS了，注册后实名认证就可以在这个连接中购买阿里云学生机</p><h3 id="1-2-配置ECS"><a href="#1-2-配置ECS" class="headerlink" title="1.2 配置ECS"></a>1.2 配置ECS</h3><p><img src="/2020/09/Aliyun-ECS/image-20200926225728674.png" alt="image-20200926225728674"></p><p>创建成功后，在阿里云主页右上角打开控制台在首页的左上角，打开选项卡，选择云服务器ECS</p><p><img src="/2020/09/Aliyun-ECS/image-20200926225607924.png" alt="image-20200926225607924"></p><p>可以看到在ECS列表中，出现了新建的阿里云学生机ECS</p><p>点击实例名称，可以看到本实例的详细信息</p><h2 id="2-使用SSH连接阿里云ECS"><a href="#2-使用SSH连接阿里云ECS" class="headerlink" title="2.使用SSH连接阿里云ECS"></a>2.使用SSH连接阿里云ECS</h2><h3 id="2-1-更改ECS密码"><a href="#2-1-更改ECS密码" class="headerlink" title="2.1 更改ECS密码"></a>2.1 更改ECS密码</h3><p>点击进入实例的详细信息之后，可以在基本信息的右侧点击<strong>更多</strong>打开下拉菜单，点击<strong>重置实例密码</strong></p><img src="/2020/09/Aliyun-ECS/image-20200929195145159.png" alt="image-20200929195145159" style="zoom:50%;"><img src="/2020/09/Aliyun-ECS/image-20200929195210389.png" alt="image-20200929195210389" style="zoom:50%;"><p>就可以更改本ECS实例的root密码了</p><p><strong>注：由于本教程面向新手，所以使用密码登录的方式，在正常的生产或开发环境中往往是使用SSH密钥来登录Linux服务器，在之后的教程可能会教大家如何创建和使用SSH密钥</strong></p><h3 id="2-2-连接ECS"><a href="#2-2-连接ECS" class="headerlink" title="2.2 连接ECS"></a>2.2 连接ECS</h3><p>在最新的Windows 10中已经内置了常用的Linux服务器连接工具SSH，直接打开Windows PowerShell或是你喜欢的终端模拟，例如Windows Terminal就可以使用了。如果是较老的Windows版本，还没有内置SSH工具，可以使用putty等第三方工具来连接SSH，此处不再赘述。</p><p>在这里使用Windows Terminal来演示</p><p><img src="/2020/09/Aliyun-ECS/image-20200929195642861.png" alt="image-20200929195642861"></p><p>打开Windows Terminal后可以看到这样的命令行界面，输入ssh有如下回显即代表系统已安装ssh工具</p><p><img src="/2020/09/Aliyun-ECS/image-20200929195756873.png" alt="image-20200929195756873"></p><p>在步骤1.2中，除了ECS实例名称外还带有实例的公网IP地址，可以打开阿里云控制台查看</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&gt; ssh <span class="hljs-symbol">user@</span>ip<br></code></pre></td></tr></table></figure><p>使用此命令使用ssh工具连接ECS服务器，此处的账户名为ECS中的Linux系统的管理员账户<code>root</code>，再带上你的服务器地址</p><p>例如</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh <span class="hljs-symbol">root@</span><span class="hljs-number">202.103</span><span class="hljs-number">.224</span><span class="hljs-number">.68</span><br></code></pre></td></tr></table></figure><p><em>此处ip为一个公共DNS服务器，请将其替换为你自己的ECS地址</em></p><p><img src="/2020/09/Aliyun-ECS/image-20200929200310289.png" alt="image-20200929200310289"></p><p>程序会要求你确认指纹是否正确，用来保证你试图连接的服务器是正确的服务器</p><p>输入<code>yes</code>后回车，会要求输入密码，输入之前修改的ECS管理密码即可</p><p><em>注意：此处输入密码不会有回显</em></p><p><img src="/2020/09/Aliyun-ECS/image-20200929200610106.png" alt="image-20200929200610106"></p><p>看到这样的终端回显即为成功连接了</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Be Quiet🙄</title>
    <link href="/2020/09/gossip1/"/>
    <url>/2020/09/gossip1/</url>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">这篇悄悄话的topic</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="e05b94477f9d76f8862beecd7c4428fe5956611fc023a2df39357959630d0c94">872d61c450d914c5648437ddb72dec8334de545e4a2e9b7420bd69173b0bb471f1743d3b686eb7a80d30653780e8cde646c5805ce39386e4d06fd97fdc00e3015a38f4abec15da00a4cbe24cad154356daf6a55298052ff209a13a7a54d196a5c440f5fdbe905abed85c945321d1ea1528419437a1969da6bc352a8962ae3a8f96907309c37f3291005839fea876e36292d03f2f359fa2df709d8063f7e0d7af3deb9b658020797f1406379028e9ab2291b16f94c8530a13754c98800821bbc1f95a8a1e4de1a0d209d7d5cec714b59699662c131857580594f2d3e229926cbf9311a0982e02568829f9015cfbdd78106655dc7e292782155b46c3d57fe44fc311da9396d0ed9164c6e54cd975a6ec291cf6a7376192f9c17fab42b4d787ee2968f3274b3f96a336f938cb4d61aeee1a51fc64c998bc4eaaaf28238963eb6106d56e9219f972e0ed57a068bdd27bab6041bea2295dcb8d54ef26fd50c729b90c6662d18a66b5df6c3d5e49e0f009b496361733ddc7a0a1dc83fb75b516ecec56092124038e0c89f3c088f6f7fec244e66682d4b37eba7fe565440ee6b421d5172c1ed63be012244afa2470fd287a69a248491e7963edd1772ebea7e1302991ec247562b796c6e42d9ad6825a5f686c5882661d97ecb528c05ee02a09fe9f055e8a00998931239fbec14268f3bac9ab34fd629bb04b23a9d6214df96de58fa247a375a0a76bd915f3eaa394163321e629022e7ed46a3903e61cab6c6b89cce6f981b6f770d24bbd28e681499ccaef5d6f46a56898b330e69800380f0c7bd2d6b71e0dc6e453ec00822063d24d7d99f66202c8b44f6c8f452ac9dfd729a799a20cdee801275e8a6749e63a893c2b196a8640264dfbb243f2639bd44e526735c078ca77b84e398f39cdb068ba7ff3f2ab0082df9adced4609b92585c059091e5b042a21d60a4358df0055d9cdcf9e6cff0344e5e23973ec4a5e4a735b455698c25c48ff439816c1ae0423f7858a963fdde7c6807eccd0a77a92a8717fe8cf817648f5cf5364c3b88c9e50a074e7b24748616210826ce9363c6e01e991231f1fe52bcc17868a97258f49dcd74f33832fa0173a440ae802873cba00b9e2d295a7187eb26735cc3553826ea0dfdbd7153af5f8c1afdcd3109bdade44d7725c9d9875544246916f1c595066c50c443e9b78889b4e18acb1041284f03d788d1042b5b4513a207b142695226ebb0f08691429bdcb99ee2e4457e1e1f419375f43c5708d6c9a6f2dec9f3438f9accd3c9f7dfb76d61900ea3507305d5e2dcc29d97d8708c969a1e953b3451ac6940207abe302ab320b556e8f29d957d9ae9a38a1b01c235bb0d13834ae18ddb3d414f9ca7e21a5db063db74e135b924d6fa9822e63e21a2724aeb4bb429513939e04a58f2b4a55e370a3a3a713479ccaff6f761eac864a8f27a4b0d006737d0d10e50e5a2f12c709b78116736569af18c10f7b04aebe497aa5359a1c97cc5ac3807dbc2c661ddedf0405e2acfe0aae059d509ac45127a206f78a9ceeb7444baa83680752aaef69f0a5c213bf719cf38bf73c85607056dabbf960d1bda53a85a83d37c0cfc6fc992d12a2fb88717cdd83f72b655d3e436007cbf7c5349cb0c27b9d472ac1d3e529e5435d09b63f7dde3a34610b88c08aac5d346c4a2ebb6e1b2c9ce95d5f114c708aaa050f82c0ec72b8a1ec80a3b2022d72f08552dae7f6c80bb7a3ef8e98abbb31d8df3ef021bcaf1b3dc43ecf4e81a9aae57cf9c8680edb44f32508b0001c0c0165af9f35411252fca721653c9bd74ba058b3d3a0d92920ebfe7ceba8fe32f434311a66bafce132b26511c9d34da0c43581fa6a6f9b61451df2376a1f87ddb257627dbb24167dec097a1b847a01c811336b5f52e2aeab165d709b31e04c1fa454d24578bf952642364169b4aac0f2a238e3f4bb76b5403f2ee8b98182a5902481a2e70ce466a5e2827ab64298e3bde44153bc1a3301244533e3d90ed82764101acf6dd3ed99a4d0926d302a42ae5eafb9bf42a2da6a7006b32e4def59e4cb03db49d0482cbc46f4d282f3d95807d307acca588c2dedf1b55eed1f5857e9cbc2a7498d9ae37ef521b02bcba555c54b2ac9b883b88cd19e258e35050a0b054fa14ecb40a91a28be424e2151594949fbf1569cc56be69d12d05bb7ecdc2e57d2cc208d8c39a645375cb772969c11186aed771da4b28c632099e5a07f5f188f1f9191edc75ff4b6d13e03d00dee7d6dfaaf65806f6a650901cb1310f1a69965a91a35db762cc0a3c8d56f7149671ecf07526219a8f6c54d75a0c5a3ca6279e4d7317c175d7de63d50712126b5acf178bc87c41982df530ce08e92f5747ca0321df37ad93e7e13ec5a0564bdde0ccb5fd0ec1c343f05e566ecdcb69ab09bd0c1a06b2776f4c63acd33f755a3d2bba377577cf039b1666f392d53efc3e816038ab3aedfe91257a0da0dc08340c0bf9f45ddaa379254f1fc93ec8b4b2f6ed6c57edeed8c96559702efb5e5e1aaa68be9ac25d3b4106136c376bf51d4191883598f00e2632e5330b679b5d69e3c7f131ca25caccb7f774cede20505b8b1f2b31e135487a29797d618fb640f10879ac44e9395a406b8b8e7ff9713788f4bfec46eafd5a44ca90c33132e8f10e90353781b0cb2e21fa96a27bef2b6639aaf1576102e56d124f3c8ffbe8f73d0ea45130a3b97f8b626788b928091b606277e8dac1c984da8f924ecc1da6a4ce5e5956d289cbe1e73738554e23ea45973347d99f7b54d8819e6433274819be785d940decded344f730ee1cf3bfff396901764b94efc07dd196f27343b56f03cef93b67c5feace546e1a24d74f44ab40bd49db827307ef49415331fcb6f69bbc7948fc59305e0d08a534c373d7f9715ff052c5abea8b6ee7cf8ed8b20dba9e076a5b0abb75eb7c5af31414d79cb004a68674228240505eaa62f94598f9aacb90be6336e51d78f5d36b87931b5a6a48afe5b1a9d555cdf9f6f346fb3712438ace7d338cf8769c36dc800d764990a4c12fdbd4a32e50e53ba9ae71cbadc0bea7fa699c39cf168a109d8cf9e31cb6f26555dbe3c188f5ca61da242e99c6831e9d8e440af534cad618423ab9f0b477ac3056506cb79028ad52613cfe1f1a5f7183f4c224ceb8797f66ff015586c2955ee0b397aec3671e1f0bbecb6fefa8b337f6d72d42f9966da1af2c58c7be10627165b077daa123fcf01189df380bf3aba25a5e18d4ef540d9ee866d31a33a00bbc384e40a613c0e3a58aa6692cbc017720620701c317ec251f414cc80ddfeba942adac8031d911a6378a58b5e6d1cea06a34675a8840f9447f854e6666c66e63d2e94456abb67887f02b3e22530b6a0d47058afa778063851003189192</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>随便写写</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
      <tag>悄悄话</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Windows中使用Hexo编写博客</title>
    <link href="/2020/08/build-Hexo/"/>
    <url>/2020/08/build-Hexo/</url>
    
    <content type="html"><![CDATA[<h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><p>算是一篇Hello World吧。这一次的博客搭建是我第三还是第四次搭博客了，经历了从最开始的VPS上的宝塔面板+WordPress，到Github Pages套上CDN和自建图床，再到现在这个搭建在Gitee Pages上的博客，每次写博客都是半途而废。希望这一次能够坚持写下去。</p><p>之前还在还是做了个Docker跑的Hexo，再到之后的WSL+Hexo，还觉得能够直接访问端口很舒服。后来发现还是在Windows里边直接搭建Hexo比较舒服。</p><p>平平淡淡才是真</p><p>记录一下Windows下边简单搭建Hexo的过程</p><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1. 安装Node.js"></a>1. 安装Node.js</h2><p><a href="https://nodejs.org/zh-cn/">Node.js</a></p><p><em>Node.js® 是一个基于 <a href="https://v8.dev/">Chrome V8 引擎</a> 的 JavaScript 运行时。</em></p><p>在Windows上的安装很简单，一路Next即可</p><p>默认安装路径为<code>C:\Program Files\nodejs</code>安装器会自动添加到PATH环境变量中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css">.<br>├── <span class="hljs-selector-tag">install_tools</span><span class="hljs-selector-class">.bat</span><br>├── <span class="hljs-selector-tag">node_etw_provider</span><span class="hljs-selector-class">.man</span><br>├── <span class="hljs-selector-tag">node</span><span class="hljs-selector-class">.exe</span><br>├── <span class="hljs-selector-tag">node_modules</span><br>├── <span class="hljs-selector-tag">nodevars</span><span class="hljs-selector-class">.bat</span><br>├── <span class="hljs-selector-tag">npm</span><br>├── <span class="hljs-selector-tag">npm</span><span class="hljs-selector-class">.cmd</span><br>├── <span class="hljs-selector-tag">npx</span><br>└── <span class="hljs-selector-tag">npx</span><span class="hljs-selector-class">.cmd</span><br></code></pre></td></tr></table></figure><p>其中<code>npm</code>是NodeJS的包管理器</p><p>打开Powershell查看PATH配置是否正确</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">$ node -v<br>v14<span class="hljs-number">.5</span><span class="hljs-number">.0</span><br>$ npm -v<br><span class="hljs-number">6.14</span><span class="hljs-number">.5</span><br></code></pre></td></tr></table></figure><p>得到以上回显则NodeJS和npm已正确配置</p><h2 id="2-切换镜像源"><a href="#2-切换镜像源" class="headerlink" title="2. 切换镜像源"></a>2. 切换镜像源</h2><p>在国内特殊的网络环境下，使用npm安装NodeJS模块偶尔会慢到令人怀疑人生</p><p>淘宝提供了NPM镜像</p><p><a href="https://developer.aliyun.com/mirror/NPM">淘宝 NPM 镜像</a></p><ol><li>淘宝NPM镜像提供了名为<code>cnpm</code>的模块来默认使用国内镜像</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install -g cnpm --registry=https:<span class="hljs-regexp">//</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure><ol start="2"><li>在Linux或macOS里可以也可以使用设置alias的方式来使用淘宝npm镜像</li></ol><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-keyword">alias</span> cnpm=<span class="hljs-string">&quot;npm --registry=https://registry.npm.taobao.org \</span><br><span class="hljs-string">--cache=$HOME/.npm/.cache/cnpm \</span><br><span class="hljs-string">--disturl=https://npm.taobao.org/dist \</span><br><span class="hljs-string">--userconfig=$HOME/.cnpmrc&quot;</span><br><br><span class="hljs-comment"># Or alias it in .bashrc or .zshrc</span><br>$ <span class="hljs-keyword">echo</span> &#x27;\n<span class="hljs-comment">#alias for cnpm\nalias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \</span><br>  <span class="hljs-params">--cache=</span>$HOME/<span class="hljs-string">.npm/.cache/cnpm</span> \<br>  <span class="hljs-params">--disturl=https</span>:<span class="hljs-string">//npm.taobao.org/dist</span> \<br>  <span class="hljs-params">--userconfig=</span>$HOME/<span class="hljs-string">.cnpmrc</span><span class="hljs-string">&quot;&#x27; &gt;&gt; ~/.zshrc &amp;&amp; source ~/.zshrc</span><br></code></pre></td></tr></table></figure><ol start="3"><li><p>设置npm registery</p><p>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p></li><li><p>安装nrm 管理，安装这个的前提是能确定链接到现在的镜像地址：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> -g nrm<br></code></pre></td></tr></table></figure><p>待安装完nrm 之后，通过nrm 管理镜像的地址，一条命令切换，如：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">nrm <span class="hljs-keyword">use</span> taobao<br></code></pre></td></tr></table></figure><p>nrm 除了淘宝站点镜像之外还有其他的，可以使用一下命令查看：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nrm ls</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3. 安装Hexo"></a>3. 安装Hexo</h2><p>Hexo需要安装Node.js和Git才能正常工作</p><p><a href="https://git-scm.com/downloads">Git - Download</a></p><p><a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝镜像 Git for Windows</a></p><p>在Windows下直接安装即可自动配置PATH，安装好后Powershell可看到回显</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">$ git --version<br>git version <span class="hljs-number">2.27</span><span class="hljs-number">.0</span>.windows<span class="hljs-number">.1</span><br></code></pre></td></tr></table></figure><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">$ npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><h2 id="4-配置Hexo"><a href="#4-配置Hexo" class="headerlink" title="4. 配置Hexo"></a>4. 配置Hexo</h2><p>也可以自行参照Hexo文档</p><p><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></p><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> hexo init &lt;folder&gt;<br><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> &lt;folder&gt;<br><span class="hljs-variable">$</span> npm install<br></code></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sqf">.<br>├── <span class="hljs-variable">_config</span>.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── <span class="hljs-variable">_drafts</span><br>|   └── <span class="hljs-variable">_posts</span><br>└── themes<br></code></pre></td></tr></table></figure><p>在<code>_config.yml</code>文件可以更改博客的配置</p><p>具体可参考官方文档</p><p><a href="https://hexo.io/zh-cn/docs/configuration">配置 | Hexo</a></p><p>更改配置并保存后，可在博客目录下运行</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>本命令会在 <a href="http://localhost:4000/">http://localhost:4000/</a> 运行一个实时渲染的http服务，更改博客的配置后保存可在页面中直接看到效果</p><h2 id="5-部署Hexo"><a href="#5-部署Hexo" class="headerlink" title="5. 部署Hexo"></a>5. 部署Hexo</h2><p>你可以使用Github Pages或类似的服务，如Gitee Pages或GitLab Pages，也可以自行搭建VPS使用nginx、caddy、uhttpd等提供http服务，也可以使用CDN加速你的博客</p><p>在开始之前先在 <code>_config.yml</code> 中修改参数，一个正确的部署配置中至少要有 <code>type</code> 参数，例如：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br></code></pre></td></tr></table></figure><p>也可同时使用多个 deployer，Hexo 会依照顺序执行每个 deployer</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-attribute">deploy</span>:<br>- <span class="hljs-attribute">type</span>: git<br>  <span class="hljs-attribute">repo</span>:<br>- <span class="hljs-attribute">type</span>: heroku<br>  <span class="hljs-attribute">repo</span>:<br></code></pre></td></tr></table></figure><p>最后运行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo deploy</span><br></code></pre></td></tr></table></figure><p>即可将生成的静态html文件push到对应的仓库中了</p><p>其它的例子：<a href="https://hexo.io/zh-cn/docs/one-command-deployment">部署 | Hexo</a></p><h2 id="6-编写博客"><a href="#6-编写博客" class="headerlink" title="6. 编写博客"></a>6. 编写博客</h2><p>Hexo使用markdown来编写文章，在博客文件夹下运行</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&#x27;文章名称&#x27;</span><br></code></pre></td></tr></table></figure><p>就会在<code>source/_posts</code>中生成<code>文章名称.md</code></p><p>使用你喜欢的Markdown编辑器，例如Visual Studio Code或Typora直接编写md文件即可</p><p>保存后打开<code>hexo server</code>即可看到渲染完成的页面了</p><h2 id="7-我的编写环境"><a href="#7-我的编写环境" class="headerlink" title="7. 我的编写环境"></a>7. 我的编写环境</h2><p>我比较喜欢用VSCode来更改配置文件或分支管理，用Typora来编写markdown文件</p><p><img src="/2020/08/build-Hexo/image-20200831165221970.png" alt="image-20200831165221970"></p><p><img src="/2020/08/build-Hexo/image-20200831165151306.png" alt="image-20200831165151306"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Windows中使用Hyper-V搭建OpenWRT环境</title>
    <link href="/2020/08/HyperWRT/"/>
    <url>/2020/08/HyperWRT/</url>
    
    <content type="html"><![CDATA[<h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><p>​    由于众所周知的原因，在特定地区的程序员访问GitHub以及Google等网站及服务会受到限制和审查，且在本地系统中使用特定的软件有可能造成系统中不受控制的访问。所以为了更好地学习计算机相关的技术，我们接下来将使用Hyper-V虚拟机软件在Windows中搭建OpenWRT路由系统以接管Windows中的访问流量，以达到操作系统层级的透明代理。</p><p><strong>请遵守当地法律法规</strong></p><p><del>Big brother is watching you</del></p><p><em>注：在可控的网络环境中建议使用单独的设备来搭建旁路路由或主路由的透明代理，本方案建议用于本机或可信设备的透明代理，Linux及macOS同样具有参考价值</em></p><h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1. 准备"></a>1. 准备</h2><h3 id="1-1-硬件要求"><a href="#1-1-硬件要求" class="headerlink" title="1.1 硬件要求"></a>1.1 硬件要求</h3><ul><li>至少有一张以太网卡（不然还上什么网）</li><li>灵活的双手，聪明的大脑，勇于尝试的心</li></ul><h3 id="1-2-软件要求"><a href="#1-2-软件要求" class="headerlink" title="1.2 软件要求"></a>1.2 软件要求</h3><ul><li>Windows 10 专业版或企业版（需要Hyper-V环境）</li><li>注：Linux可使用KVM虚拟机和brctl工具来搭建相应环境，macOS可使用Parallel Desktop等虚拟机软件，理论上在任何可运行Docker的操作系统中都可以使用Docker来搭建本环境</li></ul><h2 id="2-搭建运行环境"><a href="#2-搭建运行环境" class="headerlink" title="2. 搭建运行环境"></a>2. 搭建运行环境</h2><h3 id="2-1-开启Hyper-V"><a href="#2-1-开启Hyper-V" class="headerlink" title="2.1 开启Hyper-V"></a>2.1 开启Hyper-V</h3><p>在Windows中打开 控制面板 &gt; 程序 &gt; 程序和功能 &gt; 启用或关闭 Windows 功能，勾选Hyper-V</p><img src="/2020/08/HyperWRT/image-20200827215845196.webp" alt="image-20200827215845196" style="zoom:33%;"><p>确定后Windows将自动配置Hyper-V功能，并要求重启</p><h3 id="2-2-下载OpenWRT镜像"><a href="#2-2-下载OpenWRT镜像" class="headerlink" title="2.2 下载OpenWRT镜像"></a>2.2 下载OpenWRT镜像</h3><p>可从OpenWRT项目官方网站下载stable release或snapshot镜像，推荐使用国内的清华镜像源</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/openwrt/releases/19.07.3/targets/x86/64/openwrt-19.07.3-x86-64-combined-squashfs.img.gz">OpenWRT清华镜像</a></p><p>也有国内开发者制作的整合包，可自行寻找下载，此处推荐Github @SulingGG配置并自动编译的OpenWRT镜像</p><p><a href="https://mlapp.cn/">作者博客</a></p><p><a href="https://github.com/SuLingGG/OpenWrt-Rpi/actions?query=workflow:%22Build+x86_64+Project+OpenWrt%22">下载地址</a></p><h3 id="2-3-转换镜像格式"><a href="#2-3-转换镜像格式" class="headerlink" title="2.3 转换镜像格式"></a>2.3 转换镜像格式</h3><p>下载并解压后可看到，本系统镜像以img格式分发，而微软的Hyper-V不支持直接将img格式镜像作为虚拟机硬盘导入，此处需要进行格式转换。可使用StarWind V2V Converter</p><p><a href="https://www.starwindsoftware.com/starwind-v2v-converter#download">下载地址</a></p><p>安装后打开StarWind V2V Image Converter，根据软件提示选中img格式的系统镜像，转换为VHDX格式的硬盘镜像</p><img src="/2020/08/HyperWRT/image-20200827221117190.webp" alt="image-20200827221117190" style="zoom:50%;"><p>一路选择下一步，你会在img目录下看到一个转换完成的.vhdx文件，稍后需要将vhdx文件导入Hyper-V虚拟机</p><h2 id="3-创建Hyper-V虚拟机"><a href="#3-创建Hyper-V虚拟机" class="headerlink" title="3. 创建Hyper-V虚拟机"></a>3. 创建Hyper-V虚拟机</h2><h3 id="3-1-添加虚拟交换机"><a href="#3-1-添加虚拟交换机" class="headerlink" title="3.1 添加虚拟交换机"></a>3.1 添加虚拟交换机</h3><p>开启Windows的Hyper-V功能后可以在开始菜单中搜索到 <code>Hyper-V 管理器</code>，如图所示</p><img src="/2020/08/HyperWRT/image-20200827221831511.webp" alt="image-20200827221831511" style="zoom: 33%;"><p>由于我自己已经建立过虚拟机实例，所以有显示条目。</p><p>首先点击右侧的<code>虚拟交换机管理器</code></p><h4 id="3-1-1-添加桥接物理网卡的虚拟WAN"><a href="#3-1-1-添加桥接物理网卡的虚拟WAN" class="headerlink" title="3.1.1 添加桥接物理网卡的虚拟WAN"></a>3.1.1 添加桥接物理网卡的虚拟WAN</h4><p>首先创建新的虚拟交换机，选择<code>外部</code></p><img src="/2020/08/HyperWRT/image-20200827222047148.webp" alt="image-20200827222047148" style="zoom: 50%;"><p>稍后此虚拟交换机将作为WAN口连接至OpenWRT虚拟机，由于本虚拟机的作为上级路由的角色提供服务，所以选择桥接物理网卡</p><p>选择<code>外部网络</code>，在下拉选项卡中选中电脑连接外部网络的物理网卡，此处我使用的是笔记本内置的Killer系列的无线网卡</p><img src="/2020/08/HyperWRT/image-20200827222316744.webp" alt="image-20200827222316744" style="zoom:50%;"><p>名称可以随意填写</p><p>注意：由于现在还没有完全配置，可先勾选<strong>允许管理操作系统共享此网络适配器</strong>，待配置**完成后再取消</p><h4 id="3-1-2-添加连接操作系统的虚拟LAN"><a href="#3-1-2-添加连接操作系统的虚拟LAN" class="headerlink" title="3.1.2 添加连接操作系统的虚拟LAN"></a>3.1.2 添加连接操作系统的虚拟LAN</h4><p>返回至<code>新建虚拟网络交换机</code>，创建类型为<code>内部</code>的虚拟交换机</p><img src="/2020/08/HyperWRT/image-20200827222838397.webp" alt="image-20200827222838397" style="zoom:50%;"><p>如图所示配置，此虚拟交换机将作为虚拟路由的LAN口连接虚拟机和本机操作系统，名称可以随意填写，但要自己分清。</p><h3 id="3-2-添加虚拟机"><a href="#3-2-添加虚拟机" class="headerlink" title="3.2 添加虚拟机"></a>3.2 添加虚拟机</h3><p>回到Hyper-V管理器，点击右侧 新建 &gt; 虚拟机</p><img src="/2020/08/HyperWRT/image-20200827223044102.webp" alt="image-20200827223142047" style="zoom: 33%;"><ol><li><p>指定名称和位置</p><p>写自己喜欢的名称，放自己喜欢的文件夹里</p></li><li><p>指定代数</p><p>第一代</p></li><li><p>分配内存</p><p>不用太多，一般512MB足矣，至少128MB</p></li><li><p>配置网络</p><p>在下拉选项卡中选择先前作为WAN口添加的虚拟网络交换机</p></li><li><p>连接虚拟硬盘</p><p>将步骤2.3中的.vhdx格式虚拟硬盘文件放到你喜欢的文件夹里边</p><p>选择<code>使用现有虚拟硬盘</code>，选择该.vhdx文件</p><p>点击完成后即可在Hyper-V管理器中看到添加的虚拟机条目了。</p><p>右键点击设置，在<code>添加硬件</code>中选择<code>网络适配器</code>，在虚拟交换机中选择先前新建的LAN口虚拟交换机</p><img src="/2020/08/HyperWRT/image-20200827223840588.webp" alt="image-20200827223840588" style="zoom:33%;"></li></ol><p>配置如图所示</p><h2 id="4-配置OpenWRT"><a href="#4-配置OpenWRT" class="headerlink" title="4. 配置OpenWRT"></a>4. 配置OpenWRT</h2><h3 id="4-1-配置OpenWRT网络设置"><a href="#4-1-配置OpenWRT网络设置" class="headerlink" title="4.1 配置OpenWRT网络设置"></a>4.1 配置OpenWRT网络设置</h3><p><em>注：此处需要一些Linux操作系统基础，基本命令不再赘述</em></p><p>在Hyper-V管理器中右键虚拟机条目，选择<code>连接</code>，再点击<code>启动</code></p><p>等待几秒后内核启动完成，按下Enter可激活当前console，如图</p><img src="/2020/08/HyperWRT/image-20200827224420493.webp" alt="image-20200827224420493" style="zoom: 33%;"><p>使用vi编辑网络配置文件</p><p><code>vi /etc/config/network</code></p><p>按下<code>i</code>进入编辑模式</p><p>编辑<code>config interface &#39;lan&#39;</code>部分</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">config<span class="hljs-built_in"> interface </span><span class="hljs-string">&#x27;lan&#x27;</span><br>        option<span class="hljs-built_in"> type </span><span class="hljs-string">&#x27;bridge&#x27;</span><br>        option ifname <span class="hljs-string">&#x27;eth1&#x27;</span><br>        option proto <span class="hljs-string">&#x27;static&#x27;</span><br>        option ipaddr <span class="hljs-string">&#x27;192.168.30.1&#x27;</span><br>        option netmask <span class="hljs-string">&#x27;255.255.255.0&#x27;</span><br>        option ip6assign <span class="hljs-string">&#x27;60&#x27;</span><br></code></pre></td></tr></table></figure><p><code>ifname</code>处填写先前作为LAN的网卡在OpenWRT中的网卡名称</p><p><em>一般在Hyper-V创建虚拟机时先添加的为eth0，后添加的为eth1，以此类推（有待考证）</em></p><p><del>反正就两个网卡eth0和eth1，不行就在配置文件里交换一下试试呗</del></p><p>ipaddr部分可以填写自己喜欢的C类网段，此处为OpenWRT虚拟机在LAN网络中的地址，子网掩码默认255.255.255.0，即前缀24，允许访问192.168.30.0/24的网段，子网掩码的工作方式此处不赘述。</p><p>之后在文件末尾添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">config<span class="hljs-built_in"> interface </span><span class="hljs-string">&#x27;wan&#x27;</span><br>        option ifname <span class="hljs-string">&#x27;eth0&#x27;</span><br>        option proto <span class="hljs-string">&#x27;dhcp&#x27;</span><br></code></pre></td></tr></table></figure><p>此处意味使用dhcp协议从上级路由获取ip地址配置，具体情况需要由你所在的网络环境决定，一般来说自动获取即可</p><p>按下<code>Esc</code>退出编辑模式，输入<code>:wq</code>保存并退出</p><p>输入<code>service network restart</code>重启OpenWRT的网络服务，使得新配置文件生效</p><p>完成后输入<code>ifconfig</code>查看网卡配置</p><p>以下为我的情况</p><p>仅截取eth0（WAN）、eth1（LAN）</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">eth0      Link encap:Ethernet  HWaddr <span class="hljs-number">00</span>:<span class="hljs-number">15</span>:<span class="hljs-number">5</span>D:<span class="hljs-number">38</span>:<span class="hljs-number">01</span>:<span class="hljs-number">06</span><br>          inet addr:<span class="hljs-number">192.168</span><span class="hljs-number">.200</span><span class="hljs-number">.25</span>  Bcast:<span class="hljs-number">192.168</span><span class="hljs-number">.200</span><span class="hljs-number">.255</span>  Mask:<span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span><br>          inet6 addr: fe80::<span class="hljs-number">215</span>:<span class="hljs-number">5</span>dff:fe38:<span class="hljs-number">106</span>/<span class="hljs-number">64</span> Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:<span class="hljs-number">1500</span>  Metric:<span class="hljs-number">1</span><br>          RX packets:<span class="hljs-number">1104838</span> errors:<span class="hljs-number">0</span> dropped:<span class="hljs-number">0</span> overruns:<span class="hljs-number">0</span> frame:<span class="hljs-number">0</span><br>          TX packets:<span class="hljs-number">507163</span> errors:<span class="hljs-number">0</span> dropped:<span class="hljs-number">0</span> overruns:<span class="hljs-number">0</span> carrier:<span class="hljs-number">0</span><br>          collisions:<span class="hljs-number">0</span> txqueuelen:<span class="hljs-number">1000</span><br>          RX bytes:<span class="hljs-number">469979594</span> (<span class="hljs-number">448.2</span> MiB)  TX bytes:<span class="hljs-number">39450872</span> (<span class="hljs-number">37.6</span> MiB)<br><br>eth1      Link encap:Ethernet  HWaddr <span class="hljs-number">00</span>:<span class="hljs-number">15</span>:<span class="hljs-number">5</span>D:<span class="hljs-number">38</span>:<span class="hljs-number">01</span>:<span class="hljs-number">07</span><br>          UP BROADCAST RUNNING MULTICAST  MTU:<span class="hljs-number">1500</span>  Metric:<span class="hljs-number">1</span><br>          RX packets:<span class="hljs-number">379616</span> errors:<span class="hljs-number">0</span> dropped:<span class="hljs-number">0</span> overruns:<span class="hljs-number">0</span> frame:<span class="hljs-number">0</span><br>          TX packets:<span class="hljs-number">878441</span> errors:<span class="hljs-number">0</span> dropped:<span class="hljs-number">0</span> overruns:<span class="hljs-number">0</span> carrier:<span class="hljs-number">0</span><br>          collisions:<span class="hljs-number">0</span> txqueuelen:<span class="hljs-number">1000</span><br>          RX bytes:<span class="hljs-number">26894447</span> (<span class="hljs-number">25.6</span> MiB)  TX bytes:<span class="hljs-number">449428514</span> (<span class="hljs-number">428.6</span> MiB)<br></code></pre></td></tr></table></figure><p>现在即为完成了OpenWRT的配置，可在OpenWRT中尝试输入</p><p><code>nslookup baidu.com</code> 或 <code>ping baidu.com</code></p><p>检验网络连通性</p><p>如果网络通畅，即可再次打开Hyper-V的<code>虚拟交换机管理器</code></p><img src="/2020/08/HyperWRT/image-20200827230638876.webp" alt="image-20200827230638876" style="zoom:50%;"><p>取消勾选<code>允许管理操作系统共享此网络适配器</code></p><p>现在Windows将会以虚拟机的OpenWRT作为上级路由访问互联网</p><p>注：一开始Windows有可能无法正确获取LAN网卡上的dhcp配置，需要手动在 控制面板 &gt; 网络和 Internet &gt; 网络连接 中指定LAN网卡的静态ip配置，将ip地址设置为先前OpenWRTip地址的同一网段，子网掩码设置为255.255.255.0，网关和首选DNS设置为OpenWRT的地址</p><p>如果配置正常工作，Windows的网络状态将会如下</p><img src="/2020/08/HyperWRT/image-20200827231140238.webp" alt="image-20200827231140238" style="zoom:50%;"><p>WiFi显示无Internet，网络连接状态图标为网线连接</p><img src="/2020/08/HyperWRT/image-20200827231427864.webp" alt="image-20200827231427864" style="zoom:50%;"><p>设置中看到的图样如图所示</p><h3 id="4-2-配置OpenWRT的WebUI"><a href="#4-2-配置OpenWRT的WebUI" class="headerlink" title="4.2 配置OpenWRT的WebUI"></a>4.2 配置OpenWRT的WebUI</h3><p>输入<code>opkg update</code>，更新opkg的软件源</p><p><em>opkg为OpenWRT系发行版常用的包管理器</em></p><p>默认连接download.openwrt.org官方站点获取更新，若网络连接较慢可更换为国内镜像</p><p>由官方站点更换为清华镜像：</p><p><code>sed -i &#39;s_downloads.openwrt.org_mirrors.tuna.tsinghua.edu.cn/openwrt_&#39; /etc/opkg/distfeeds.conf</code></p><p>由官方站点更换为北外镜像：</p><p><code>sed -i &#39;s_downloads.openwrt.org_mirrors.bfsu.edu.cn/openwrt_&#39; /etc/opkg/distfeeds.conf</code></p><p>除此之外腾讯云也提供OpenWRT镜像服务，需要的朋友可自行更换</p><p>完成后可安装软件包</p><p><code>opkg install *</code></p><p>，*处替换为需要安装的软件包</p><ul><li>luci</li><li>luci-base</li><li>luci-compat</li><li>luci-i18n-base-zh-cn</li></ul><p>安装好后，即可在浏览器中输入OpenWRT的地址，打开WebUI管理页面</p><img src="/2020/08/HyperWRT/image-20200827231611178.webp" alt="image-20200827231611178" style="zoom:50%;"><p><em>此处我配置好后更改了主题</em></p><h2 id="5-其它事项"><a href="#5-其它事项" class="headerlink" title="5. 其它事项"></a>5. 其它事项</h2><p>现在你的系统网络流量将会经由OpenWRT虚拟机转发，可以在OpenWRT中安装插件或其它软件来实现不同的功能</p><img src="/2020/08/HyperWRT/image-20200827231902745.webp" alt="image-20200827231902745" style="zoom:33%;"><p>详细步骤和教程请自行搜索，请不要将本教程用于非法用途</p><p>若需要其它的设备同样使用该OpenWRT虚拟机，可使用桥接网卡以旁路路由的架构连入本地网络中，详细教程以后有时间再说吧</p><p>Vlist 2020年8月27日 初稿</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>技术</tag>
      
      <tag>网络</tag>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
